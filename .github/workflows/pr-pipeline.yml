# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: pr-pipeline

on:
  pull_request:
    branches: [ "main" ]

jobs:

  build-validate:
    uses: ./.github/workflows/build-validate.yml
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  notify_user_on_failure:
    name: notify user on failure      
    runs-on: ubuntu-latest
    needs: [build-validate]
    if: failure()
    steps:
      - name: send slack failure notification
        id: notifyFailureRequest
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://nebula-rho-pink.vercel.app/api/slack-alerts?name=${{ github.event.repository.name }}&message=❌ build failed for repository ${{ github.repository }}&buildUrl=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}&commitHash=${{ github.event.head_commit.url }}&commitMessage=${{ github.event.head_commit.message }}&branch=${{ github.head_ref }}&author=${{ github.actor }}'
          method: 'GET'
          preventFailureOnNoResponse: 'true'
          customHeaders: '{"Content-Type": "application/json"}'
      - name: Show Response
        run: |
          echo ${{ steps.notifyRequest.outputs.response }}
          echo ${{ steps.notifyRequest.outputs.headers }}

  notify_user_on_success:
    name: notify user on success
    runs-on: ubuntu-latest
    needs: [build-validate]
    if: success()
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: send slack success notification
        id: notifySuccessRequest
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://nebula-rho-pink.vercel.app/api/slack-alerts?name=${{ github.event.repository.name }}&message=✅ build passed for repository ${{ github.repository }}&buildUrl=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}&commitHash=${{ github.event.head_commit.url }}&commitMessage=${{ github.event.head_commit.message }}&branch=${{ github.head_ref }}&author=${{ github.actor }}'
          method: 'GET'
          preventFailureOnNoResponse: 'true'
          customHeaders: '{"Content-Type": "application/json"}'

      - name: show response
        run: |
          echo ${{ steps.notifyRequest.outputs.response }}
          echo ${{ steps.notifyRequest.outputs.headers }}
        
