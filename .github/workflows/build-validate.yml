name: build-validate

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true

jobs:
  build-validate:
    runs-on: ubuntu-latest

    steps:    
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup node environment
        uses: actions/setup-node@v3
        with:
          node-version: 17.x
          cache: npm
      
      - name: install dependencies
        run: npm ci

      - name: check for lint errors
        run: npm run lint

      - name: build application
        run: npm run build --if-present

      - name: run unit tests for applications with coverage
        run: npm run test:cov

      - name: run e2e tests for applications
        run: npm run test:e2e

      - name: run sonarqube scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: changing project from default to foundation quality gate
        run: curl -u '${{ secrets.SONAR_TOKEN }}:' -X POST "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/select?gateName=Foundation&projectKey=${{ github.event.repository.name }}"

      - name: changing project from default to foundation quality profile
        run: curl -u '${{ secrets.SONAR_TOKEN }}:' -X POST "${{ secrets.SONAR_HOST_URL }}/api/qualityprofiles/add_project?language=ts&project=${{ github.event.repository.name }}&qualityProfile=Foundation"

      - name: sonarqube quality gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}